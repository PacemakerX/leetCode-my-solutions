{
  "id": 1222478406,
  "question_id": 205,
  "lang": "java",
  "lang_name": "Java",
  "timestamp": 1712176040,
  "status": 10,
  "status_display": "Accepted",
  "runtime": "10 ms",
  "url": "/submissions/detail/1222478406/",
  "is_pending": "Not Pending",
  "title": "Isomorphic Strings",
  "memory": "42.4 MB",
  "code": "import java.util.HashMap;\n\npublic class Solution {\n    public boolean isIsomorphic(String s, String t) {\n        \n        HashMap<Character, Character> mapS2T = new HashMap<>();\n        HashMap<Character, Character> mapT2S = new HashMap<>();\n        \n        for (int i = 0; i < s.length(); i++) {\n            char charS = s.charAt(i);\n            char charT = t.charAt(i);\n            \n            // Check if there's a mapping for charS in mapS2T and if it maps to the same character in t\n            if (mapS2T.containsKey(charS)) {\n                if (mapS2T.get(charS) != charT) {\n                    return false;\n                }\n            } else { // If no mapping exists, check if charT is already mapped to some other character in mapT2S\n                if (mapT2S.containsKey(charT)) {\n                    return false;\n                }\n                \n                // Create new mapping since it's valid\n                mapS2T.put(charS, charT);\n                mapT2S.put(charT, charS);\n            }\n        }\n        \n        return true;\n    }\n    \n    \n}",
  "title_slug": "isomorphic-strings",
  "has_notes": false,
  "flag_type": 1
}
