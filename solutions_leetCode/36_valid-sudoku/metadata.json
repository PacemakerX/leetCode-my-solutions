{
  "id": 1118868229,
  "question_id": 36,
  "lang": "java",
  "lang_name": "Java",
  "timestamp": 1702475442,
  "status": 10,
  "status_display": "Accepted",
  "runtime": "1 ms",
  "url": "/submissions/detail/1118868229/",
  "is_pending": "Not Pending",
  "title": "Valid Sudoku",
  "memory": "43.1 MB",
  "code": "class Solution {\n      public  boolean isValidSudoku(char[][] board) {\n        for (int i = 0; i < board.length; i++) {\n            for (int j = 0; j < board[0].length; j++) {\n                if (board[i][j] != '.') {\n                    if (!(checkColoumn(board, board[i][j], i, j) && checkBox(board, board[i][j], i, j)&& checkRow(board,board[i][j], i, j)))\n                        return false;\n\n                }\n\n            }\n        }\n        return true;\n    }\n\n    public  boolean checkColoumn(char[][] board, char ch, int row, int coloumn) {\n        for (int i = 0; i < board.length; i++) {\n            if (i != row && board[i][coloumn] == ch)\n                return false;\n\n        }\n        return true;\n    }\n     public  boolean checkRow(char[][] board, char ch, int row, int coloumn) {\n        for (int i = 0; i < board[0].length; i++) {\n            if (i != coloumn && board[row][i] == ch)\n                return false;\n\n        }\n        return true;\n    }\n\n    public  boolean checkBox(char[][] board, char ch, int row, int coloumn) {\n        for (int i = ((row / 3) * 3); i < ((row / 3 + 1) * 3); i++) {\n            for (int j = ((coloumn / 3) * 3); j < ((coloumn / 3 + 1) * 3); j++) {\n\n                if (i != row && j != coloumn && board[i][j] == ch)\n                    return false;\n            }\n\n        }\n        return true;\n    }\n}",
  "title_slug": "valid-sudoku",
  "has_notes": false,
  "flag_type": 1
}
