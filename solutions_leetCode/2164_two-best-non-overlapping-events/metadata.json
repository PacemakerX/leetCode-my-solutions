{
  "id": 1473778828,
  "question_id": 2164,
  "lang": "cpp",
  "lang_name": "C++",
  "timestamp": 1733689324,
  "status": 10,
  "status_display": "Accepted",
  "runtime": "58 ms",
  "url": "/submissions/detail/1473778828/",
  "is_pending": "Not Pending",
  "title": "Two Best Non-Overlapping Events",
  "memory": "126.1 MB",
  "code": "class Solution {\npublic:\n    int maxTwoEvents(vector<vector<int>>& events) {\n        sort(events.begin(), events.end());\n        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<>> pq;\n        int maxVal = 0, ans = 0;\n\n        for (const auto& event : events) {\n            int start = event[0], end = event[1], value = event[2];\n\n            while (!pq.empty() && pq.top().first < start) {\n                maxVal = max(maxVal, pq.top().second);\n                pq.pop();\n            }\n\n            ans = max(ans, maxVal + value);\n            pq.push({end, value});\n        }\n\n        return ans;\n    }\n};",
  "title_slug": "two-best-non-overlapping-events",
  "has_notes": false,
  "flag_type": 1
}
