{
  "id": 1166597066,
  "question_id": 1408,
  "lang": "java",
  "lang_name": "Java",
  "timestamp": 1707120804,
  "status": 10,
  "status_display": "Accepted",
  "runtime": "30 ms",
  "url": "/submissions/detail/1166597066/",
  "is_pending": "Not Pending",
  "title": "Find the Smallest Divisor Given a Threshold",
  "memory": "47.9 MB",
  "code": "class Solution {\n   public  int smallestDivisor(int[] nums, int threshold) {\n        int max = Integer.MIN_VALUE;\n        for (int i = 0; i < nums.length; i++) {\n            max = Math.max(max, nums[i]);\n        }\n        int start = 1, end = max, mid = 0;\n        boolean checkVal = false;\n\n        while (start <= end) {\n            mid = start + (end - start) / 2;\n            checkVal = check(nums, mid, threshold);\n            if (checkVal == true)\n                end = mid - 1;\n            else\n                start = mid + 1;\n        }\n        return start;\n\n    }\n\n    public  boolean check(int[] nums, int n, int threshold) {\n        int sum = 0;\n        for (int i = 0; i < nums.length; i++) {\n            sum += Math.ceil((double) nums[i] / n);\n        }\n        return sum <= threshold;\n    }\n\n}",
  "title_slug": "find-the-smallest-divisor-given-a-threshold",
  "has_notes": false,
  "flag_type": 1
}
