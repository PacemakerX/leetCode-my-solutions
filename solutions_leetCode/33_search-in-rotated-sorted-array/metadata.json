{
  "id": 1065082961,
  "question_id": 33,
  "lang": "java",
  "lang_name": "Java",
  "timestamp": 1696262672,
  "status": 10,
  "status_display": "Accepted",
  "runtime": "0 ms",
  "url": "/submissions/detail/1065082961/",
  "is_pending": "Not Pending",
  "title": "Search in Rotated Sorted Array",
  "memory": "41.6 MB",
  "code": "class Solution {\n       public  int search(int[] nums, int target) {\n        int index = 0;\n        int max=nums[0];\n        for (int i = 1; i < nums.length; i++) {\n            if (max < nums[i] ) {\n                index = i;\n                max=nums[i];\n            }\n        }\n        if (target >= nums[0] && target <= nums[index])\n            return binarySearch(nums, 0, index, target);\n        // if (target >= nums[index + 1] && target < nums[index])\n        else\n        return binarySearch(nums, index + 1, nums.length - 1, target);\n    }\n\n    public  int binarySearch(int[] arr, int start, int end, int target) {\n        while (start <= end) {\n            int mid = start + (end - start) / 2;\n            if (target > arr[mid])\n                start = mid + 1;\n            else if (target < arr[mid])\n                end = mid - 1;\n            else\n                return mid;\n        }\n        return -1;\n    }\n}",
  "title_slug": "search-in-rotated-sorted-array",
  "has_notes": false,
  "flag_type": 1
}
